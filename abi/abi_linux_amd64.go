// Code generated by gen/gen.c; DO NOT EDIT.

package abi

import "sync/atomic"

const (
	ErrDomain              Error = 33
	ErrIllegalByteSequence Error = 84
	ErrResultTooLarge      Error = 34
)

const (
	FloatRadix                = 2
	DecimalDigits             = 21
	FloatDecimalDigits        = 9
	DoubleDecimalDigits       = 17
	DoubleLongDecimalDigits   = 21
	MinFloat                  = 0.000000
	MinDouble                 = 0.000000
	MinDoubleLong             = 0.000000
	TrueMinFloat              = 0.000000
	TrueMinDouble             = 0.000000
	TrueMinDoubleLong         = 0.000000
	MaxFloat                  = 340282346638528859811704183484516925440.000000
	MaxDouble                 = 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000
	MaxDoubleLong
	FloatEpsilon              = 0.000000
	DoubleEpsilon             = 0.000000
	DoubleLongEpsilon         = 0.000000
	FloatTextDigits           = 6
	DoubleTextDigits          = 15
	DoubleLongTextDigits      = 18
	FloatMantissaDigits       = 24
	DoubleMantissaDigits      = 53
	DoubleLongMantissaDigits  = 64
	MinExpFloat               = -125
	MinExpDouble              = -1021
	MinExpDoubleLong          = -16381
	Min10ExpFloat             = -37
	Min10ExpDouble            = -307
	Min10ExpDoubleLong        = -4931
	MaxExpFloat               = 128
	MaxExpDouble              = 1024
	MaxExpDoubleLong          = 16384
	Max10ExpFloat             = 38
	Max10ExpDouble            = 308
	Max10ExpDoubleLong        = 4932
	FloatEvalMethod           = 0
	FloatHasSubnormal         = 1
	DoubleHasSubnormal        = 1
	DoubleLongHasSubnormal    = 1
)

const (
	FloatExceptionsDefault FloatException = 0
	FloatDivisionByZero    FloatException = 4
	FloatInexact           FloatException = 32
	FloatInvalid           FloatException = 1
	FloatOverflow          FloatException = 8
	FloatUnderflow         FloatException = 16
	FloatExceptionsAll     FloatException = 61
)

const (
	FloatRoundDefault    FloatRoundingMode = 0
	FloatRoundDownward   FloatRoundingMode = 1024
	FloatRoundToNearest  FloatRoundingMode = 0
	FloatRoundTowardZero FloatRoundingMode = 3072
	FloatRoundUpward     FloatRoundingMode = 2048
)

const (
	FloatIsNormal          FloatClass = 4
	FloatIsSubnormal       FloatClass = 3
	FloatIsZero            FloatClass = 2
	FloatIsInfinite        FloatClass = 1
	FloatIsNaN             FloatClass = 0
)

const (
	Termination         Signal = 15
	InvalidMemoryAccess Signal = 11
	Interrupt           Signal = 2
	InvalidInstruction  Signal = 4
	AbnormalTermination Signal = 6
	FloatingPointError  Signal = 8
)

const (
	AtomicBoolLockFree         = 2
	AtomicCharLockFree         = 2
	AtomicChar16LockFree       = 2
	AtomicChar32LockFree       = 2
	AtomicWcharLockFree        = 2
	AtomicShortLockFree        = 2
	AtomicIntLockFree          = 2
	AtomicLongLockFree         = 2
	AtomicLongLongLockFree     = 2
	AtomicPointerLockFree      = 2
)

const (
	EOF            = -1
	MaxFiles       = 16
	MaxFileNameLen = 4096
	BufferSize     = 8192
	MaxTempFiles   = 238328
	TempNameSize   = 20
)

const (
	FullyBuffered BufferMode = 0
	LineBuffered  BufferMode = 1
	Unbuffered    BufferMode = 2
)

const (
	SeekStart   SeekMode = 0
	SeekCurrent SeekMode = 1
	SeekEnd     SeekMode = 2
)

type Locale struct {
	DecimalPoint                   String
	ThousandsSeperator             String
	Grouping                       String
	CurrencyName                   String
	CurrencySymbol                 String
	MonetaryDecimalPoint           String
	MonetaryThousandsSeperator     String
	MonetaryGrouping               String
	PositiveSign                   String
	NegativeSign                   String
	MonetaryFractionalDigits       Char
	FractionDigits                 Char
	LocalCurrencyPrefixesPositive  Char
	LocalCurrencyPositiveSpacing   Char
	LocalCurrencyPrefixesNegative  Char
	LocalCurrencyNegativeSpacing   Char
	LocalCurrencyPositiveSignPos   Char
	LocalCurrencyNegativeSignPos   Char
	CurrencyPrefixesPositive       Char
	CurrencyPositiveSpacing        Char
	CurrencyPrefixesNegative       Char
	CurrencyNegativeSpacing        Char
	CurrencyPositiveSignPos        Char
	CurrencyNegativeSignPos        Char
}

type NanoTime struct {
	Seconds     Time
	Nanoseconds Time
}

type Date struct {
	Seconds         Int
	Minutes         Int
	Hours           Int
	Days            Int
	Months          Int
	Years           Int
	Weekdays        Int
	DaysThisYear    Int
	DaylightSavings Int
}

const (
	LocaleAll          LocaleCategory = 6
	LocaleCollate      LocaleCategory = 3
	LocaleC            LocaleCategory = 0
	LocaleMonetary     LocaleCategory = 4
	LocaleNumeric      LocaleCategory = 1
	LocaleTime         LocaleCategory = 2
)

const (
UTC            TimeType = 1

ClocksPerSec   Clock      = 1000000
)

type FloatingPointEnvironment [32]byte

type JumpBuffer [200]byte

type File [216]byte

type FilePosition [16]byte

const (
	CharBits                = 8
	MaxRuneLength           = 16
	MinChar                 = -128
	MaxChar                 = 127
	MinSignedChar           = -128
	MinShort                = -32768
	MinInt                  = -2147483648
	MinLong                 = -9223372036854775808
	MinLongLong             = -9223372036854775808
	MaxSignedChar           = 127
	MaxShort                = 32767
	MaxInt                  = 2147483647
	MaxLong                 = 9223372036854775807
	MaxLongLong             = 9223372036854775807
	MaxUnsignedChar         = 255
	MaxUnsignedShort        = 65535
	MaxUnsignedInt          = 4294967295
	MaxUnsignedLong         = 18446744073709551615
	MaxUnsignedLongLong     = 18446744073709551615
	MinInt8                 = -128
	MinInt16                = -32768
	MinInt32                = -2147483648
	MinInt64                = -9223372036854775808
	MinFast8                = -128
	MinFast16               = 0
	MinFast32               = 0
	MinFast64               = -9223372036854775808
	MinLeast8               = -128
	MinLeast16              = -32768
	MinLeast32              = -2147483648
	MinLeast64              = -9223372036854775808
	MinIntptr               = -9223372036854775808
	MinIntmax               = -9223372036854775808
	MaxInt8                 = 127
	MaxInt16                = 32767
	MaxInt32                = 2147483647
	MaxInt64                = 9223372036854775807
	MaxFastInt8             = 127
	MaxFastInt16            = -1
	MaxFastInt32            = -1
	MaxFastInt64            = 9223372036854775807
	MaxLeastInt8            = 127
	MaxLeastInt16           = 32767
	MaxLeastInt32           = 2147483647
	MaxLeastInt64           = 9223372036854775807
	MaxIntptr               = 9223372036854775807
	MaxIntmax               = 9223372036854775807
	MaxUint8                = 255
	MaxUint16               = 65535
	MaxUint32               = 4294967295
	MaxUint64               = 18446744073709551615
	MaxFastUint8            = 255
	MaxFastUint16           = 4294967295
	MaxFastUint32           = 4294967295
	MaxFastUint64           = 18446744073709551615
	MaxLeastUint8           = 255
	MaxLeastUint16          = 65535
	MaxLeastUint32          = 4294967295
	MaxLeastUint64          = 18446744073709551615
	MaxUintptr              = 18446744073709551615
	MaxUintmax              = 18446744073709551615
)

type (
	Bool                bool
	Char                int8
	CharSigned          int8
	CharUnsigned        uint8
	CharWide            int32
	Short               int16
	IntShort            int16
	ShortSigned         int16
	IntShortSigned      int16
	ShortUnsigned       uint16
	IntShortUnsigned    uint16
	Int                 int32
	Signed              int32
	IntSigned           int32
	Unsigned            uint32
	IntUnsigned         uint32
	Long                int64
	LongInt             int64
	LongSigned          int64
	IntLongSigned       int64
	LongUnsigned        uint64
	IntLongUnsigned     uint64
	LongLong            int64
	IntLongLong         int64
	LongLongSigned      int64
	IntLongLongSigned   int64
	LongLongUnsigned    uint64
	IntLongLongUnsigned uint64
	Float               float32
	Double              float64
	DoubleLong          [16]byte
	ComplexFloat        [2]Float
	ComplexDouble       [2]Double
	ComplexDoubleLong   [2]DoubleLong
	FastInt8            int8
	FastInt16           int64
	FastInt32           int64
	FastInt64           int64
	LeastInt8           int8
	LeastInt16          int16
	LeastInt32          int32
	LeastInt64          int64
	IntMax              int64
	Intptr              int64
	FastUInt8           uint8
	FastUInt16          uint64
	FastUInt32          uint64
	FastUInt64          uint64
	LeastUInt8          uint8
	LeastUInt16         uint16
	LeastUInt32         uint32
	LeastUInt64         uint64
	UIntMax             uint64
	FastFloat          float32
	FastDouble         float64
	AtomicBool             atomic.Bool
	AtomicInt              atomic.Int32
	AtomicUnsignedInt      atomic.Uint32
	AtomicLong             atomic.Int64
	AtomicUnsignedLong     atomic.Uint64
	AtomicUnsignedLongLong atomic.Uint64
	AtomicChar32           atomic.Uint32
	AtomicWchar            atomic.Uint32
	AtomicIntLeast32       atomic.Int32
	AtomicUIntLeast32      atomic.Uint32
	AtomicIntFast32        atomic.Int64
	AtomicUIntFast32       atomic.Uint64
	AtomicIntFast64        atomic.Int64
	AtomicUIntFast64       atomic.Uint64
	AtomicUintptr          atomic.Uint64
	AtomicSize             atomic.Uint64
	AtomicPtrdiff          atomic.Int64
	AtomicIntMax           atomic.Int64
	AtomicUIntMax          atomic.Uint64
	Pointer             struct{uint64}
	Size                uint64
	String              struct{uint64}
	StringWide          struct{uint64}
	Ptrdiff             int64
	Time                int64
	Clock               int64
)
